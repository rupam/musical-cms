image: docker:19.03.1

variables:
  DOCKER_DRIVER: "overlay2"
  REGISTRY_URL: "${CI_REGISTRY}/avneeshroks/musical-cms"
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build
  - deploy

services:
  - docker:19.03.1-dind

before_script:
  - docker info

build-app:
  stage: build
  only:
    - develop
  tags:
    - docker
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t ${REGISTRY_URL}:${CI_COMMIT_SHA} .
    - docker tag ${REGISTRY_URL}:${CI_COMMIT_SHA} ${REGISTRY_URL}:latest
    - docker push ${REGISTRY_URL}:${CI_COMMIT_SHA}
    - docker push ${REGISTRY_URL}:latest

deploy-app:
  stage: deploy
  image: alpine
  only:
    - develop
  script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-cluster k8s --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --token="$KUBE_TOKEN"
    - kubectl config set-context default --cluster=k8s --user=admin
    - kubectl config use-context default
    - kubectl apply -f deployment.yaml
    - kubectl patch deployment backend -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}}}}}"
